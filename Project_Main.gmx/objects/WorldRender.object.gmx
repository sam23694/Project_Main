<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//World grid location
worldGridX = World.x;
worldGridY = World.y;

//World grid size
worldGridWidth = World.x2-World.x;
worldGridHeight = World.y2-World.y;

//World cell size
worldCellWidth = (worldGridWidth/World.mapWidth);
worldCellHeight = (worldGridHeight/World.mapHeight);

//grid overlay
grid = false;


surf = surface_create(room_width, room_height);


/*
surface_set_target(surf);


surface_reset_target();
*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="72">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//NEED TO BE MOVED causes framerate to drop to 30 due to looping every frame. Make a buffer and draw it here
//Also, the map desirably needs to be very large (larger then 80x80), so perhaps simulate a quad tree style loading in addition to zooming in. The game runs at 47 while zoomed on 180x180, do better

//draw_surface(surf, 0, 0);
//Surfaces seem like a decent method of dreceasing overhead for the biome map displaying. Biomes never change, however they need to be redrawn when the game window is manipulated

var localGridX, localGridX2;
var localGridY, localGridY2;
var localGridCX, localGridCY, localGridAX, localGridAY;

var gridColor

localGridX = worldGridX;
localGridX2 = worldGridX+worldCellWidth;

localGridY = worldGridY;
localGridY2 = worldGridY+worldCellHeight;   
    
for(var i = 0; i &lt; World.mapWidth; i++)
{
    
    
    for(var j = 0; j &lt; World.mapHeight; j++)
    {
        
                
        //draw if true
        if(localGridX &lt; view_xview[0]+view_wview[0] &amp;&amp; localGridX2 &gt; view_xview[0] &amp;&amp; 
            localGridY &lt; view_yview[0]+view_hview[0] &amp;&amp; localGridY2 &gt; view_yview[0])
        {
            gridColor = World.regionData[World.regionStore[i, j], 3].overlayColor;

            //draw_set_alpha(0.2);
            /*
            draw_point(localGridX, localGridY);
            draw_point(localGridX2, localGridY);
            draw_point(localGridX, localGridY2);
            draw_point(localGridX2, localGridY2);
            
            draw_line(localGridX2-worldCellWidth/2, localGridY, localGridX2-worldCellWidth/2, localGridY2);
            draw_line(localGridX, localGridY2-worldCellHeight/2, localGridX2, localGridY2-worldCellHeight/2);
            */
            draw_rectangle_color_adjusted(localGridX, localGridY, localGridX2, localGridY2, gridColor, gridColor, gridColor, gridColor, 0);                      
            
            if(grid)
                draw_rectangle_color_adjusted(localGridX, localGridY, localGridX2, localGridY2,
                                        c_black, c_black, c_black, c_black, 1);
        
            if(WorldRegionHasCity_xy(i, j))//city
            {
                localGridCX = localGridX+worldCellWidth/2;
                localGridCY = localGridY+worldCellHeight/2;
                draw_circle_colour(localGridCX, localGridCY, worldCellWidth/4, WorldGetRegionCapitalCity_xy(i, j).factionOwner.factionColor, WorldGetRegionCapitalCity_xy(i, j).factionOwner.factionColor, 0);
            }
            if(World.regionData[World.regionStore[i, j], 4] != -1)//anomaly
            {
                localGridAX = localGridX+worldCellWidth/4;
                localGridAY = localGridY+worldCellHeight/4;
                draw_circle_colour(localGridAX, localGridAY, worldCellWidth/8, c_red, c_red, 0);
            }
        }                       

        localGridY = localGridY2;
        localGridY2 += worldCellHeight;
    }
    localGridY = worldGridY;
    localGridY2 = worldGridY+worldCellHeight;   
    
    localGridX = localGridX2;
    localGridX2 += worldCellWidth;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="71">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(grid)
    grid = false;
else
    grid = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
